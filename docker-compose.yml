services:
  postgres:
    image: postgres:15-alpine
    container_name: berth_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-berthcare_dev}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - berth-dev

  redis:
    image: redis:7-alpine
    container_name: berth_redis
    restart: unless-stopped
    command: ['redis-server', '--save', '60', '1', '--loglevel', 'warning']
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - berth-dev

  localstack:
    image: localstack/localstack:latest
    container_name: berth_localstack
    restart: unless-stopped
    ports:
      - '${LOCALSTACK_PORT:-4566}:4566'
    environment:
      SERVICES: s3
      DEFAULT_REGION: ${AWS_REGION:-ca-central-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-localstack}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-localstack}
      EDGE_PORT: 4566
    volumes:
      - localstack_data:/var/lib/localstack
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'awslocal s3 ls >/dev/null 2>&1 || awslocal s3 mb s3://${AWS_S3_BUCKET:-berthcare-local} >/dev/null 2>&1',
        ]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - berth-dev

volumes:
  postgres_data:
  redis_data:
  localstack_data:

networks:
  berth-dev:
    driver: bridge
